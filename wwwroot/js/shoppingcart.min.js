
const cartModal = $("#cart-modal");
const cartMenu = $("#cart-menu");
const totalQuantityLabel = $("#total-quantity-label");
/*const modalItemNameLabel = $("#menuitem-name");*/
const modalItemNameLabel = document.getElementById("menuitem-name");
const modalItemPriceLabel = $("#menuitem-price");
const modalItemQuantityInput = $("#quantity");
const modalItemTotalLabel = $("#menuitem-total");
const checkoutTotalLabel = $("#checkoutTotalLabel");

function addToCart(menuitemHTMLElement) {
    alert(menuitemHTMLElement.data);
    alert(modalItemNameLabel.innerHTML);
    const menuitemElement = $(menuitemHTMLElement);
    const price = parseInt(menuitemElement.data("price"));
    alert(price)
    const name = menuitemElement.data("name");
    const Id = menuitemElement.data("id");

    modalMenuItemNameLabel.data("elementId", menuitemHTMLElement.id);
    modalMenuItemNameLabel.html(name);
    modalMenuItemPriceLabel.html(`Unit Price: ${price}`);

    function onQuantityChanged() {
        let quantity = parseInt(this.value);
        if (isNaN(quantity)) {
            quantity = 0;
        }
        modalMenuItemTotalLabel.html(`Total: : ${quantity * price}`);
    }

    modalMenuItemQuantityInput.on("keyup", onQuantityChanged);
    modalMenuItemQuantityInput.on("change", onQuantityChanged);

    setInitialQuantityAndTotalPrice(Id, price);
    cartModal.modal("show");
}

function setInitialQuantityAndTotalPrice(Id) {
    const cart = getCart();
    const i = indexOfMenuItemInCart(cart, Id);
    if (i >= 0) {
        modalMenuItemQuantityInput.val(cart[i].quantity + 1);
    } else {
        modalMenuItemQuantityInput.val(1);
    }
    modalMenuItemQuantityInput.trigger("change");
}

function indexOfMenuItemInCart(cart, Id) {
    for (const i in cart) {
        const cartItem = cart[i];

        if (cartItem.Id === Id) {
            return i;
        }
    }

    return -1;
}

function updateOrAddToCart(cart, menuitem) {
    var i = indexOfItemInCart(cart, item.Id);
    if (i >= 0) {
        cart[i].quantity = menuitem.quantity;
    } else {
        cart.push(menuitem);
    }

}

function getCart() {
    return JSON.parse(localStorage.getItem("cart")) || [];
}

$("#save").on("click", function () {
    const elementId = modalItemNameLabel.data("elementId");
    const menuitemElement = $(`#${elementId}`);

    const price = parseInt(menuitemElement.data("price"));
    const name = menuitemElement.data("name");
    const quantity = parseInt(modalMenuItemQuantityInput.val());
    const Id = menuitemElement.data("id");

    const menuitem = { Id, name, quantity, price };
    const cart = getCart();
    updateOrAddToCart(cart, menuitem);
    updateCart(cart);
    updateCartMenu();
    cartModal.modal("toggle");
});

function updateCart(cart) {
    localStorage.setItem("cart", JSON.stringify(cart));
}

function updateCartMenu() {
    const cart = getCart();
    let elements = "";
    let totalPrice = 0;
    cart.forEach((menuitem) => {
        menuitemTotalPrice = menuitem.quantity * menuitem.price;
        totalPrice += menuitemTotalPrice;

        elements += `<small><strong>${menuitem.name}</strong>--- <strong>Unit Price</strong>:  ${menuitem.price}----<strong>Quantity</strong>:${menuitem.quantity} ---- <strong>Subtotal</strong>:N${menuitemTotalPrice} <button class="btn btn-sm btn-danger " onclick="deleteMenuItemFromCart(${menuitem.Id}, getCart())">Remove</button></small>`;

        elements += `<hr>`;
    });

    elements += `<strong class="float-right text-success font-weight-bolder">Total Price: N${totalPrice}</strong>`;
    elements += `<hr>`;
    elements += `<button class="btn btn-sm btn-danger " onclick="clearCart(getCart())">Empty Cart</button>`;
    elements += `<hr>`;
    cartMenu.html(elements);
    var totalQuantity = getTotalQuantity();
    totalQuantityLabel.html(totalQuantity);

    checkoutTotalLabel.html(totalPrice);
}


function getTotalQuantity() {
    const cart = getCart();
    let sum = 0;
    cart.forEach((menuitem) => {
        sum += menuitem.quantity;
    });
    return sum;
}

function clearCart() {
    const cart = [];
    updateCart(cart);
    updateCartMenu();
}

function deleteMenuItemFromCart(Id, cart) {
    const i = indexOfItemInCart(cart, Id);
    if (i > -1) {
        cart.splice(i, 1);
    }
    updateCart(cart);
    updateCartMenu();
}

$(document).ready(function () {
    updateCartMenu();
    $('[data-toggle="popover"]').popover();
});

